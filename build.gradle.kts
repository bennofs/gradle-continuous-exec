/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6/userguide/custom_plugins.html
 */

plugins {
    id("com.gradle.plugin-publish").version("0.12.0")
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    `java-gradle-plugin`
    maven
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use JUnit test framework for unit tests
    testImplementation("junit:junit:4.13")
}

gradlePlugin {
    // Define the plugin
    plugins.create("continuousExec") {
        id = "io.github.bennofs.continuous-exec"
        implementationClass = "io.github.bennofs.gradle.continuous.ContinuousExecPlugin"
        version = "0.1.1"
    }
}

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    website = "https://github.com/bennofs/gradle-continuous-exec"
    vcsUrl = "https://github.com/bennofs/gradle-continuous-exec"
    description = "Plugin for spawning daemon processes in continuous builds"
    tags = listOf("continuous", "exec", "process", "daemon")

    plugins {
        named("continuousExec") {
            // id is captured from java-gradle-plugin configuration
            displayName = "Gradle Continuous Exec plugin"
        }
    }
}
